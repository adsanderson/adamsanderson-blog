- main:
  - article:
    - heading "A critical fix" [level=1]
    - 'heading "or: How I used critcal path CSS to help speed up loading" [level=2]'
    - paragraph: A look into how I fixed an issue with a less than optimal optimisation, or how I got critical, phantomjs, SVGs and responsiveness to play together.
    - heading "The background & the problem" [level=3]
    - paragraph:
      - text: I’ve add
      - link "critical"
      - text: into this blogs build pipeline. Critical’s job is to generate the critical CSS for each page and then inline it.
    - paragraph: The problem was I was getting a pop-in with the css, un-styled content at the bottom of the screen. This felt like a step back from loading the full stylesheet.
    - paragraph:
      - img "The loading timeline with pop-in"
    - heading "The debug process" [level=3]
    - paragraph:
      - text: The first stop in the process to track down the issue was to check what CSS was being inlined. This was simply looking at the generated
      - code: <style>
      - text: tag in the head of the document. It was obvious that the
      - code: .nav
      - text: section of rules were missing.
    - paragraph: So we know the issue is with the generation; and only some of the expected rules being generated.
    - paragraph: My next target for inspection was the SVG title in the header. It seems the rules after that were not being generated. So I deleted the SVG re-ran the generation and found that had fixed the missing CSS rules.
    - heading "A picture is worth a thousand words" [level=3]
    - paragraph: The next step was to see what was being generated inside of critical to get this unwanted result. So I wrote a simple phantomjs script to take render the page and see what it looked like.
    - paragraph: The results were surprising.
    - paragraph:
      - img "Large orange page"
    - paragraph:
      - text: I wanted the text in the heading to be responsive. The problem is without bounds that heading SVG got
      - strong: BIG
      - text: . The above screenshot is
      - code: 10000px
      - text: high, so with that critical was getting all of the above the fold content.
    - heading "The fix" [level=3]
    - paragraph:
      - text: I added bounds, simply set the
      - code: max-height
      - text: for the SVG’s container element and re-ran the generation to get this.
    - paragraph:
      - img "the working phantom render"
    - paragraph: So now the page loads the critical CSS inline then the rest of the page loads. Without any visible pop-in.
- contentinfo:
  - navigation:
    - img "Adam Sanderson"
    - text: A front-end developer based out of Hastings, UK
    - link "Home"
    - link "github"
    - link "twitter"
    - link "email"